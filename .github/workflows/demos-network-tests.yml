name: Demos Network Tests

# on:
#   workflow_run:
#     workflows: ["Deploy to demos network"]
#     types:
#       - completed
#
on:
  push:
    branches: [ improvement/rt/demos-network-tests ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '21'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run modules visibility tests (chromium only)
        run: npx playwright test tests/e2e --project chromium

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  notify-success:
    needs: test
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Download Playwright Report
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Zip the playwright report
        run: zip -r playwright-report.zip playwright-report/

      - name: Slack notification (Success)
        run: |
          curl -F file=@playwright-report.zip \
               -F "initial_comment=:white_check_mark: A new version from Merchant was released, and the frontend demo site tests have passed successfully! :white_check_mark:" \
               -F channels=${{ secrets.SLACK_MERCHANT_DEMO_STATUS_CHANNEL_ID }} \
               -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
               https://slack.com/api/files.upload

  notify-failure:
    needs: test
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Download Playwright Report
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Zip the playwright report
        run: zip -r playwright-report.zip playwright-report/

      - name: Slack notification (Failure)
        run: |
          curl -F file=@playwright-report.zip \
               -F "initial_comment=:x: A new version from Merchant was released, but the frontend demo site tests **failed**! :x:" \
               -F channels=${{ secrets.SLACK_MERCHANT_DEMO_STATUS_CHANNEL_ID }} \
               -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
               https://slack.com/api/files.upload